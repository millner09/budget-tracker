// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using persistance;

#nullable disable

namespace persistance.Migrations
{
    [DbContext(typeof(BudgetTrackerContext))]
    [Migration("20220716195722_removed identitycore")]
    partial class removedidentitycore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("domain.MonthlyBudget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("MonthlyBudgetDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("StartingBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("YearMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MonthlyBudgets");
                });

            modelBuilder.Entity("domain.PlannedExpense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonthlyBudgetId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PlannedAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MonthlyBudgetId");

                    b.ToTable("PlannedExpenses");
                });

            modelBuilder.Entity("domain.PlannedIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MonthlyBudgetId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PlannedAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MonthlyBudgetId");

                    b.ToTable("PlannedIncomes");
                });

            modelBuilder.Entity("domain.PlannedExpense", b =>
                {
                    b.HasOne("domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.MonthlyBudget", "MonthlyBudget")
                        .WithMany("PlannedExpenses")
                        .HasForeignKey("MonthlyBudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MonthlyBudget");
                });

            modelBuilder.Entity("domain.PlannedIncome", b =>
                {
                    b.HasOne("domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.MonthlyBudget", "MonthlyBudget")
                        .WithMany("PlannedIncomes")
                        .HasForeignKey("MonthlyBudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MonthlyBudget");
                });

            modelBuilder.Entity("domain.MonthlyBudget", b =>
                {
                    b.Navigation("PlannedExpenses");

                    b.Navigation("PlannedIncomes");
                });
#pragma warning restore 612, 618
        }
    }
}
